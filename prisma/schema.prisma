generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model follow {
  id                                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  follower_id                           String?   @db.Uuid
  followed_id                           String?   @db.Uuid
  created_at                            DateTime  @default(now()) @db.Timestamp(6)
  updated_at                            DateTime  @default(now()) @db.Timestamp(6)
  investor_follow_followed_idToinvestor investor? @relation("follow_followed_idToinvestor", fields: [followed_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  investor_follow_follower_idToinvestor investor? @relation("follow_follower_idToinvestor", fields: [follower_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model investment {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cryptocurrency String    @db.VarChar(255)
  amount         Int
  investor_id    String?   @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  investor       investor? @relation(fields: [investor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model investor {
  id                                  String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description                         String?      @db.VarChar(255)
  image                               String?      @db.VarChar(255)
  name                                String       @db.VarChar(255)
  created_at                          DateTime     @default(now()) @db.Timestamp(6)
  updated_at                          DateTime     @default(now()) @db.Timestamp(6)
  user_id                             String       @db.Uuid
  tenant_id                           String       @db.VarChar(255)
  follow_follow_followed_idToinvestor follow[]     @relation("follow_followed_idToinvestor")
  follow_follow_follower_idToinvestor follow[]     @relation("follow_follower_idToinvestor")
  investment                          investment[]
  user                                user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  investor    investor[]
}
